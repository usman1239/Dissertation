@page "/challenge/stories"
@using Dissertation.View_Models
@rendermode InteractiveServer
@inject ChallengeDashboardViewModel ViewModel

<link href="Styles/Main.css" rel="stylesheet"/>
<link href="Styles/Home.css" rel="stylesheet"/>
<link rel="stylesheet" href="Styles/Challenge/Shared.css"/>
<link rel="stylesheet" href="Styles/Challenge/UserStoriesManagement.css"/>

<h2>User Stories</h2>

<MudPaper>
	@if (ViewModel.ProjectStateService.UserStoryInstances.Any())
	{
		<table class="user-stories-table">
			<thead>
			<tr>
				<th>Title</th>
				<th>Description</th>
				<th>Story Points</th>
				<th>Assigned Developer</th>
				<th>Progress</th>
			</tr>
			</thead>
			<tbody>
			@foreach (var story in ViewModel.ProjectStateService.UserStoryInstances)
			{
				var assignedDev = ViewModel.ProjectStateService.Team.FirstOrDefault(d => d.Id == story.DeveloperAssignedId);
				var isAssignedDevUnavailable = assignedDev != null && ViewModel.UserStoryViewModel.IsDeveloperUnavailable(assignedDev.Id);

				<tr>
					<td>@story.UserStory.Title</td>
					<td>@story.UserStory.Description</td>
					<td>@story.UserStory.StoryPoints</td>
					<td>
						<InputSelect @bind-Value:get="story.DeveloperAssignedId"
						             @bind-Value:set="value => ViewModel.UserStoryViewModel.AssignDeveloperToStory(story, value)">
							<option value="">Unassigned</option>
							@foreach (var developer in ViewModel.ProjectStateService.Team)
							{
								var isUnavailable = ViewModel.UserStoryViewModel.IsDeveloperUnavailable(developer.Id);
								<option value="@developer.Id"
								        disabled="@isUnavailable"
								        style="color: @(isUnavailable ? "gray" : "black")">
									@developer.Name (@developer.ExperienceLevel) @(isUnavailable ? " - Unavailable" : "")
								</option>
							}
						</InputSelect>

						@if (isAssignedDevUnavailable)
						{
							<MudTooltip Text="This developer is currently unavailable (sick or absent)">
								<MudIcon Icon="@Icons.Material.Filled.Warning" Color="Color.Error" Style="margin-left: 4px;"/>
							</MudTooltip>
						}
					</td>
					<td>
						<MudStack>
							<MudProgressLinear Value="@story.Progress"
							                   Color="@(story.Progress < 30 ? Color.Error : story.Progress < 70 ? Color.Warning : Color.Success)"
							                   Rounded="true"/>
							<MudText Typo="Typo.body2" Class="text-center">@story.Progress%</MudText>
						</MudStack>
					</td>
				</tr>
			}
			</tbody>
		</table>
	}
	else
	{
		<p>No user stories found.</p>
	}

	<div>
		<MudButton Href="/challenge/dashboard" Class="action-button">⬅ Back to Dashboard</MudButton>
	</div>
</MudPaper>