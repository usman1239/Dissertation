// <auto-generated />
using Dissertation.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Dissertation.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Dissertation.Models.Challenge.Choice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ChoiceText")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsCorrect")
                        .HasColumnType("boolean");

                    b.Property<int?>("NextScenarioId")
                        .HasColumnType("integer");

                    b.Property<int>("ScenarioId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("NextScenarioId");

                    b.HasIndex("ScenarioId");

                    b.ToTable("Choices");
                });

            modelBuilder.Entity("Dissertation.Models.Challenge.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Difficulty")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("Dissertation.Models.Challenge.Scenario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Phase")
                        .HasColumnType("integer");

                    b.Property<int>("ProjectId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("Scenarios");
                });

            modelBuilder.Entity("Dissertation.Models.Challenge.Choice", b =>
                {
                    b.HasOne("Dissertation.Models.Challenge.Scenario", "NextScenario")
                        .WithMany()
                        .HasForeignKey("NextScenarioId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Dissertation.Models.Challenge.Scenario", "Scenario")
                        .WithMany("Choices")
                        .HasForeignKey("ScenarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NextScenario");

                    b.Navigation("Scenario");
                });

            modelBuilder.Entity("Dissertation.Models.Challenge.Scenario", b =>
                {
                    b.HasOne("Dissertation.Models.Challenge.Project", "Project")
                        .WithMany("Scenarios")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("Dissertation.Models.Challenge.Project", b =>
                {
                    b.Navigation("Scenarios");
                });

            modelBuilder.Entity("Dissertation.Models.Challenge.Scenario", b =>
                {
                    b.Navigation("Choices");
                });
#pragma warning restore 612, 618
        }
    }
}
